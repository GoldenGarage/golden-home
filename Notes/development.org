* Development

** Desktop

*** Lubuntu

**** [[http://www.sudo-juice.com/change-lxde-screen-resolution-ubuntu-lubuntu/][Change LXDE Screen Resolution]]

     Changing the LXDE screen resolution is easy, but at first its not permanent. 

     : sudo em /etc/xdg/lxsession/LXDE/autostart


** Languages

*** Markdown

**** [[http://daringfireball.net/projects/markdown/syntax][Markdown: Syntax]]

     Markdown is intended to be as easy-to-read and easy-to-write as is feasible.

     Readability, however, is emphasized above all else. A Markdown-formatted document should be publishable as-is, as
     plain text, without looking like it’s been marked up with tags or formatting instructions. While Markdown’s syntax
     has been influenced by several existing text-to-HTML filters — including Setext, atx, Textile, reStructuredText,
     Grutatext, and EtText — the single biggest source of inspiration for Markdown’s syntax is the format of plain text
     email.

**** [[https://help.github.com/articles/github-flavored-markdown][GitHub Flavored Markdown]]

     GitHub uses what we're calling "GitHub Flavored Markdown" (GFM) for messages, issues, and comments. It differs
     from standard Markdown (SM) in a few significant ways and adds some additional functionality.

**** [[https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet][Markdown Cheatsheet]]

     This is intended as a quick reference and showcase. For more complete info, see [[http://daringfireball.net/projects/markdown/][John Gruber's original spec]] and
     the [[https://help.github.com/articles/github-flavored-markdown][Github-flavored Markdown info page]].




** Services

*** GitHub

**** [[http://net.tutsplus.com/tutorials/tools-and-tips/how-to-work-with-github-and-multiple-accounts/][using github with multiple accounts]]

     So you have a personal GitHub account; everything is working perfectly. But then, you get a new job, and now need
     to have the ability to push and pull to multiple accounts. How do you do that? I’ll show you how!



** Tools

*** [[http://www.openssh.com/][ssh]] (OpenSSH)

    OpenSSH is a FREE version of the SSH connectivity tools that technical users of the Internet rely on. Users of
    telnet, rlogin, and ftp may not realize that their password is transmitted across the Internet unencrypted, but it
    is. OpenSSH encrypts all traffic (including passwords) to effectively eliminate eavesdropping, connection
    hijacking, and other attacks. Additionally, OpenSSH provides secure tunneling capabilities and several
    authentication methods, and supports all SSH protocol versions.

**** [[http://www.linuxproblem.org/art_9.html][SSH Login wihtout a password]]

     You want to use Linux and OpenSSH to automize your tasks. Therefore you need an automatic login from host A /
     user a to Host B / user b. You don't want to enter any passwords, because you want to call ssh from a within a
     shell script.

     : a@A:~> cat .ssh/id_rsa.pub | ssh b@B 'cat >> .ssh/authorized_keys'
     : b@B's password: 

**** [[http://geekswing.com/geek/unix/how-to-ssh-login-without-a-password-using-ssh-keygen-quick-tutorial/][How To SSH Login Without A Password: Using SSH-Keygen Quick Tutorial]]

     A quick (very quick!) set of instructions on how to set up ssh login without password using ssh-keygen and
     ssh-copy-id. I was “inspired” to write this because of my “discovery” of ssh-copy-id! Wow did this save a few
     hair-tearing headaches!
     
     : ssh-copy-id -i ~/.ssh/id_rsa.pub root@node02

**** [[http://stackoverflow.com/questions/2419566/best-way-to-use-multiple-ssh-private-keys-on-one-client][best way to use multiple ssh private keys on one client]]

     From my .ssh/config:

     : Host           friendly-name
     : HostName       long.and.cumbersome.server.name
     : IdentityFile   ~/.ssh/private_ssh_file
     : User           username-on-remote-machine

     Now you can connect using the friendly-name:

     : ssh friendly-name

